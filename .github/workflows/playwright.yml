name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master, development ]
jobs:
  test:
    environment: end2end
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
          
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Get cargo leptos version
      id: cargo-leptos-version
      run: echo "CARGO_LEPTOS_VERSION=$(cargo search cargo-leptos --limit 1 | sed -n "s/.*\"\(.*\)\".*/\1/gp")" >> $GITHUB_ENV
    - name: cache cargo leptos installation
      uses: actions/cache@v3
      env:
        cache-name: cache-cargo-leptos
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo_leptos_version-${{ env.CARGO_LEPTOS_VERSION }}
    - if: ${{ steps.cache-cargo-leptos.outputs.cache-hit != 'true' }}
      name: Install Cargo dependencies
      run: |
        cargo install cargo-leptos --version ${{ env.CARGO_LEPTOS_VERSION }}
        cargo install stylance-cli
        cargo install sqlx-cli

    - name: Add wasm target
      run: rustup target add wasm32-unknown-unknown


    - name: Get installed Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(npm search playwright --json | jq .[0].version -r)" >> $GITHUB_ENV
    - name: Cache playwright binaries
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

    - name: Install playwright
      run: |
        npm install -D playwright-core
        npm install --save-dev @playwright/test
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Create github CI user
      run: |
        psql -U postgres -h localhost -p $POSTGRES_PORT -d postgres -c "CREATE USER github_ci WITH PASSWORD 'githubCI_pass'"
        psql -U postgres -h localhost -p $POSTGRES_PORT -d postgres -c "ALTER USER github_ci CREATEDB"
      env:
        PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
    - name: Setup postgres from test dump
      run: |
        sqlx database create
        sqlx migrate run
        psql -U github_ci -h localhost -p $POSTGRES_PORT -d tally_web -f .github/postgres_setup/setup-test.sql
      env:
        PGPASSWORD: githubCI_pass
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        DATABASE_URL: postgres://github_ci:githubCI_pass@localhost:${{ job.services.postgres.ports[5432] }}/tally_web

    - name: bundle css
      run: stylance ./frontend/ --output-file ./style/bundle.scss

    - name: Cache build dependencies for rust
      uses: actions/cache@v3
      env:
        cache-name: cache-tallyweb-target
      with:
        path: target
        key: ${{ runner.os }}-cargo.target
    - name: Run Playwright tests
      run: cargo leptos end-to-end -r
      env:
        DATABASE_URL: postgres://github_ci:githubCI_pass@localhost:5432/tally_web
        LEPTOS_OUTPUT_NAME: debug
        TALLYWEB_VERSION: 0.3.0
        LEPTOS_WASM_OPT_VERSION: version_116
        LEPTOS_SASS_VERSION: 1.71.0
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
